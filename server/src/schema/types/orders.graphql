extend type Mutation {
    createOrder(input: CreateOrderInput!): Order!

    updateOrder(input: UpdateOrderInput!): SuccessResponse!
}

enum StatusOrder {
    creatNew
    Delivering
    successDelivery
    paymentConfirmation
    paid
    done
}

type Order {
    id: Int!
    sale: User!
    customer: Customer!
    invoiceNo: String!
    VAT: Float
    totalAmount: Float
    status: StatusOrder!
    discount: Float
    freightPrice: Float
    deliverAddress: String
    createdAt: Date
    updatedAt: Date
}

input CreateOrderInput {
    saleId: Int!
    customerId: Int!
    VAT: Float
    product: [productInput!]!
    discount: Float
    freightPrice: Float
    deliverAddress: String
}

input productInput {
    description: String
    priceProduct: Float!
    productId: Int!
    quantity: Int!
    weightProduct: Float
}

input UpdateOrderInput {
    id:Int!
    saleId: Int
    customerId: Int
    invoiceNo: String
    VAT: Float
    status: StatusOrder
    discount: Float
    freightPrice: Float
    deliverAddress: String
    product: [UpdateProductOrderInput!]
}

input UpdateProductOrderInput {
    orderItem: Int!
    productId: Int
    description: String
    priceProduct: Float
    quantity: Int
    weightProduct: Float
}